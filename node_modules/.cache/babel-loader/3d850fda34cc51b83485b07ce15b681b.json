{"ast":null,"code":"var _jsxFileName = \"/Users/jermanybrown/Project_Flashcards_Qualified_1/src/CreateDeck/CreateDeckComp.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport DeckForm from \"../Components/DeckForm\";\nimport { createDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateDeckComp() {\n  _s();\n\n  const history = useHistory();\n\n  function submitHandler(deck) {\n    createDeck(deck).then(savedDeck => history.push(`/decks/${savedDeck.id}`));\n  }\n\n  function cancel() {\n    history.goBack();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            \"aria-current\": \"page\",\n            children: \"Create Deck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeckForm, {\n      idType: \"cancelcreate\",\n      onCancel: cancel,\n      onSubmit: submitHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateDeckComp, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreateDeckComp;\nexport default CreateDeckComp; // The Create Deck screen has the following features:\n// The path to this screen should be /decks/new.\n// There is a breadcrumb navigation bar with a link to home / followed by the text Create Deck (i.e., Home/Create Deck).\n// A form is shown with the appropriate fields for creating a new deck.\n// The name field is an <input> field of type text.\n// The description field is a <textarea> field that can be multiple lines of text.\n// If the user clicks \"submit\", the user is taken to the Deck screen.\n// If the user clicks \"cancel\", the user is taken to the Home screen.\n// The Deck screen has the following features:\n// The path to this screen should include the deckId (i.e., /decks/:deckId).\n// There is a breadcrumb navigation bar with a link to home / followed by the name of the deck (e.g., Home/React Router).\n// The screen includes the deck name (e.g., \"React Router\") and deck description (e.g., \"React Router is a collection of navigational components that compose declaratively in your application\").\n// The screen includes \"Edit\", \"Study\", \"Add Cards\", and \"Delete\" buttons. Each button takes the user to a different destination, as follows:\n// | Button Clicked | Destination |\n// | -------------- | ---------------------------------------------------------------------------------------------- |\n// | \"Edit\" | Edit Deck Screen |\n// | \"Study\" | Study screen |\n// | \"Add Cards\" | Add Card screen |\n// | \"Delete\" | Shows a warning message before deleting the deck]( See the \"Delete Card Prompt\" section below) |\n// Each card in the deck:\n// is listed on the page under the \"Cards\" heading.\n// shows a question and the answer to the question.\n// has an “Edit” button that takes the user to the Edit Card screen when clicked.\n// has a “Delete” button that allows that card to be deleted.\n// Delete Card Prompt\n// When the user clicks the \"Delete\" button associated with a card, a warning message is shown and the user can click \"OK\" or \"Cancel\". If the user clicks \"OK\", the card is deleted.\n// You can use window.confirm() to create the modal dialog shown in the screenshot below.\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateDeckComp\");","map":{"version":3,"sources":["/Users/jermanybrown/Project_Flashcards_Qualified_1/src/CreateDeck/CreateDeckComp.js"],"names":["React","useHistory","Link","DeckForm","createDeck","CreateDeckComp","history","submitHandler","deck","then","savedDeck","push","id","cancel","goBack"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB,QAAMC,OAAO,GAAGL,UAAU,EAA1B;;AAEA,WAASM,aAAT,CAAuBC,IAAvB,EAA6B;AAC3BJ,IAAAA,UAAU,CAACI,IAAD,CAAV,CAAiBC,IAAjB,CAAuBC,SAAD,IACpBJ,OAAO,CAACK,IAAR,CAAc,UAASD,SAAS,CAACE,EAAG,EAApC,CADF;AAGD;;AACD,WAASC,MAAT,GAAkB;AAChBP,IAAAA,OAAO,CAACQ,MAAR;AACD;;AACD,sBACE;AAAA,4BACE;AAAA,6BACE;AAAK,sBAAW,YAAhB;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAI,YAAA,SAAS,EAAC,wBAAd;AAAuC,4BAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE,QAAC,QAAD;AACE,MAAA,MAAM,EAAC,cADT;AAEE,MAAA,QAAQ,EAAED,MAFZ;AAGE,MAAA,QAAQ,EAAEN;AAHZ;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAjCQF,c;UACSJ,U;;;KADTI,c;AAkCT,eAAeA,cAAf,C,CAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport DeckForm from \"../Components/DeckForm\";\nimport { createDeck } from \"../utils/api\";\n\nfunction CreateDeckComp() {\n  const history = useHistory();\n\n  function submitHandler(deck) {\n    createDeck(deck).then((savedDeck) =>\n      history.push(`/decks/${savedDeck.id}`)\n    );\n  }\n  function cancel() {\n    history.goBack();\n  }\n  return (\n    <div>\n      <div>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Create Deck\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <h2>Create Deck</h2>\n      <DeckForm\n        idType=\"cancelcreate\"\n        onCancel={cancel}\n        onSubmit={submitHandler}\n      />\n    </div>\n  );\n}\nexport default CreateDeckComp;\n\n\n\n\n// The Create Deck screen has the following features:\n\n// The path to this screen should be /decks/new.\n// There is a breadcrumb navigation bar with a link to home / followed by the text Create Deck (i.e., Home/Create Deck).\n// A form is shown with the appropriate fields for creating a new deck.\n// The name field is an <input> field of type text.\n// The description field is a <textarea> field that can be multiple lines of text.\n// If the user clicks \"submit\", the user is taken to the Deck screen.\n// If the user clicks \"cancel\", the user is taken to the Home screen.\n\n\n\n// The Deck screen has the following features:\n\n// The path to this screen should include the deckId (i.e., /decks/:deckId).\n// There is a breadcrumb navigation bar with a link to home / followed by the name of the deck (e.g., Home/React Router).\n// The screen includes the deck name (e.g., \"React Router\") and deck description (e.g., \"React Router is a collection of navigational components that compose declaratively in your application\").\n// The screen includes \"Edit\", \"Study\", \"Add Cards\", and \"Delete\" buttons. Each button takes the user to a different destination, as follows:\n\n// | Button Clicked | Destination |\n// | -------------- | ---------------------------------------------------------------------------------------------- |\n// | \"Edit\" | Edit Deck Screen |\n// | \"Study\" | Study screen |\n// | \"Add Cards\" | Add Card screen |\n// | \"Delete\" | Shows a warning message before deleting the deck]( See the \"Delete Card Prompt\" section below) |\n\n// Each card in the deck:\n\n// is listed on the page under the \"Cards\" heading.\n// shows a question and the answer to the question.\n// has an “Edit” button that takes the user to the Edit Card screen when clicked.\n// has a “Delete” button that allows that card to be deleted.\n// Delete Card Prompt\n\n// When the user clicks the \"Delete\" button associated with a card, a warning message is shown and the user can click \"OK\" or \"Cancel\". If the user clicks \"OK\", the card is deleted.\n\n// You can use window.confirm() to create the modal dialog shown in the screenshot below."]},"metadata":{},"sourceType":"module"}